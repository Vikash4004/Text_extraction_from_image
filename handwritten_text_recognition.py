# -*- coding: utf-8 -*-
"""handwritten_text_recognition.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BwQZXwYkLC0OK3wvdfYNjEMhjb7W8iJS

Name: Vikash Ghanchi

Installation : These all are dependencies which we have to install.
"""

!sudo apt-get update

!sudo apt install tesseract-ocr

!sudo pip install pytesseract

!sudo apt install libtesseract-dev

# Here we are saving source image in the directory.
# Mounting google drive for retriving image.

from google.colab import drive
drive.mount('/content/gdrive')

filename = ('gdrive/My Drive/images/testimg4.png')

"""**Test image:**

**Below is the link of input image which i am taking to test.**

**You can download it to run in your system**

https://drive.google.com/file/d/1AUzQM4VFP7kAHBAlYPKnMLk6qiMzUiOC/view?usp=sharing
"""

import cv2
import numpy as np
import pytesseract
from PIL import Image

def get_string(img_path):
  #reading image with opencv
  img = cv2.imread(img_path)

  #Here converting image into gray scale image
  img = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

  #Here applying dilation and erosion to remove some noise from image
  kernel = np.ones((1,1), np.uint8)
  img = cv2.dilate(img, kernel, iterations=1)
  img = cv2.erode(img, kernel, iterations=1)

  #write image after removing noise
  cv2.imwrite("removed_noise.png", img)

  #Apply threshold to get image with only black and white because it is difficult
  #for pytesseract to read image with colors and noise
  #Write teh image after apply opencv to do some task
  cv2.imwrite(img_path, img)

  #Recognize text with tesseract and saving result into result
  result = pytesseract.image_to_string(Image.open(img_path))

  return result

print("__The Process is started __")
print("Text from image , Which is recognized::")
print(get_string(filename))

print("__The Process is completed__")